#include <stdio.h>
#include <assert.h>

// Function to display the tic-tac-toe board
void displayBoard(char board[3][3]) {
    printf("\n");
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            printf(" %c ", board[i][j]);
            if (j < 2) {
                printf("|");
            }
        }
        printf("\n");
        if (i < 2) {
            printf("---|---|---\n");
        }
    }
    printf("\n");
}

// Function to check if the game has been won
int checkWin(char board[3][3], char player) {
    // Check rows
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
            return 1;
        }
    }
    // Check columns
    for (int j = 0; j < 3; j++) {
        if (board[0][j] == player && board[1][j] == player && board[2][j] == player) {
            return 1;
        }
    }
    // Check diagonals
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
        return 1;
    }
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
        return 1;
    }
    return 0;
}

// Function to check if the game is a draw
int checkDraw(char board[3][3]) {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] == ' ') {
                return 0;
            }
        }
    }
    return 1;
}

// Function to play the tic-tac-toe game
void playGame() {
    char board[3][3] = {{' ', ' ', ' '}, {' ', ' ', ' '}, {' ', ' ', ' '}};
    char currentPlayer = 'X';
    int row, col;
    int gameOver = 0;

    while (!gameOver) {
        displayBoard(board);
        printf("Player %c's turn\n", currentPlayer);
        printf("Enter row (0-2): ");
        scanf("%d", &row);
        printf("Enter column (0-2): ");
        scanf("%d", &col);

        if (row < 0 || row > 2 || col < 0 || col > 2 || board[row][col] != ' ') {
            printf("Invalid move. Try again.\n");
            continue;
        }

        board[row][col] = currentPlayer;

        if (checkWin(board, currentPlayer)) {
            displayBoard(board);
            printf("Player %c wins!\n", currentPlayer);
            gameOver = 1;
        } else if (checkDraw(board)) {
            displayBoard(board);
            printf("It's a draw!\n");
            gameOver = 1;
        }

        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
    }
}

// Unit test cases for tic-tac-toe
void testTicTacToe() {
    char board[3][3] = {{' ', ' ', ' '}, {' ', ' ', ' '}, {' ', ' ', ' '}};

    // Test initial board state
    assert(checkWin(board, 'X') == 0);
    assert(checkWin(board, 'O') == 0);
    assert(checkDraw(board) == 0);

    // Test winning conditions
    board[0][0] = 'X';
    board[0][1] = 'X';
    board[0][2] = 'X';
    assert(checkWin(board, 'X') == 1);
    assert(checkWin(board, 'O') == 0);
    assert(checkDraw(board) == 0);

    board[1][0] = 'O';
    board[1][1] = 'O';
    board[1][2] = 'O';
    assert(checkWin(board, 'X') == 0);
    assert(checkWin(board, 'O') == 1);
    assert(checkDraw(board) == 0);

    board[2][0] = 'X';
    board[2][1] = 'X';
    board[2][2] = 'X';
    assert(checkWin(board, 'X') == 1);
    assert(checkWin(board, 'O') == 0);
    assert(checkDraw(board) == 0);

    board[0][0] = 'O';
    board[1][1] = 'O';
    board[2][2] = 'O';
    assert(checkWin(board, 'X') == 0);
    assert(checkWin(board, 'O') == 1);
    assert(checkDraw(board) == 0);

    board[0][2] = 'X';
    board[1][1] = 'X';
    board[2][0] = 'X';
    assert(checkWin(board, 'X') == 1);
    assert(checkWin(board, 'O') == 0);
    assert(checkDraw(board) == 0);

    // Test draw condition
    board[0][0] = 'X';
    board[0][1] = 'O';
    board[0][2] = 'X';
    board[1][0] = 'X';
    board[1][1] = 'O';
    board[1][2] = 'O';
    board[2][0] = 'O';
    board[2][1] = 'X';
    board[2][2] = 'X';
    assert(checkWin(board, 'X') == 0);
    assert(checkWin(board, 'O') == 0);
    assert(checkDraw(board) == 1);
}

int main() {
    testTicTacToe();
    playGame();
    return 0;
}